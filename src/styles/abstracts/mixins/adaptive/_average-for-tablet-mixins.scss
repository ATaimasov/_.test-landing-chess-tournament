@use 'shared-breakpoints' as *;
@use '@abstracts/functions/strip-unit-function' as *;
@use 'sass:map';


// .example {
//   // Использование с дефолтными брейкпоинтами (md to xl)
//   @include avg-bp('width', 100px, 200px);

//   // Использование с пользовательскими брейкпоинтами
//   @include avg-bp('height', 50px, 150px, 'sm', 'lg');

//   // Использование с указанием среднего значения
//   @include avg-bp('font-size', 14px, 24px, 'xs', 'xxl', 18px);
// }

// Этот обновленный миксин `avg-bp` позволяет:

// 1. Задавать начальный и конечный брейкпоинты из карты `$breakpoints`.
// 2. Использовать все доступные брейкпоинты из карты.
// 3. Опционально указывать среднее значение.
// 4. Выдавать ошибку при использовании несуществующего брейкпоинта.


@mixin avg-bp($property, $start-value, $end-value, $start-breakpoint: 'md', $end-breakpoint: 'xl', $middle-value: null) {
  $start-screen: map.get($breakpoints, $start-breakpoint);
  $end-screen: map.get($breakpoints, $end-breakpoint);

  @if not $start-screen or not $end-screen {
    @error "Invalid breakpoint name. Please use one of: #{map.keys($breakpoints)}";
  }

  & {
    #{$property}: $start-value;
  }

  // Calculation of the middle value, if not specified
  @if $middle-value == null {
    $middle-value: $start-value + ($end-value - $start-value) * 0.5;
  }

  // Adaptive value between start and end breakpoints
  @media screen and (min-width: $start-screen) {
    $start-value-num: strip-unit($start-value);
    $middle-value-num: strip-unit($middle-value);
    $end-value-num: strip-unit($end-value);
    $start-screen-num: strip-unit($start-screen);
    $end-screen-num: strip-unit($end-screen);

    #{$property}: calc(#{$middle-value} + (#{$end-value-num} - #{$middle-value-num}) * (min(100vw, #{$end-screen}) - #{$start-screen}) / (#{$end-screen-num} - #{$start-screen-num}));
  }

  // Fixed value for end breakpoint and above
  @media screen and (min-width: $end-screen) {
    #{$property}: $end-value;
  }
}

// @mixin avg-bp-bw($property, $start-value, $end-value, $start-breakpoint: 'md', $end-breakpoint: 'xl') {
//   $start-screen: map.get($breakpoints, $start-breakpoint);
//   $end-screen: map.get($breakpoints, $end-breakpoint);

//   @if not $start-screen or not $end-screen {
//     @error "Invalid breakpoint name. Please use one of: #{map.keys($breakpoints)}";
//   }

//   // Adaptive value between start and end breakpoints
//   @media screen and (min-width: $start-screen) and (min-width: $end-screen - 1px) {
//     $start-value-num: strip-unit($start-value);
//     $end-value-num: strip-unit($end-value);
//     $start-screen-num: strip-unit($start-screen);
//     $end-screen-num: strip-unit($end-screen);

//     #{$property}: calc(#{$start-value} + (#{$end-value-num} - #{$start-value-num}) * (100vw - #{$start-screen}) / (#{$end-screen-num} - #{$start-screen-num}));
//   }
// }

